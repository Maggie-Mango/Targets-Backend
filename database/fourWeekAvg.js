const query = 
`SELECT
DAY,
CASES,
ROUND(AVG(COUNT_EM)) AS "30DAVG"
FROM(
SELECT
CASE
    WHEN SUBROUTE IN ('UNCATEGORIZED_ACH_HIGH', 'UNCATEGORIZED_ACH_LOW')  THEN 'ACH'
    WHEN SUBROUTE IN ('BUYER_FRAUD_ALERT_HIGH', 'BUYER_FRAUD_ALERT_LOW', 'BUYER_FRAUD_HIGH', 'BUYER_FRAUD_LOW' ) THEN 'BF'
    WHEN SUBROUTE IN ('FAKE_ACCOUNT_HIGH', 'FAKE_ACCOUNT_LOW', 'FAKE_ACCOUNT_CARD_PRESENT_LOW', 'FAKE_ACCOUNT_CARD_PRESENT_HIGH') THEN 'FA'
    WHEN SUBROUTE IN ('CARDING') THEN 'CARDING'
    WHEN SUBROUTE IN ('COMPLETE_RISK_REQUEST_HIGH', 'COMPLETE_RISK_REQUEST_LOW', 'INCOMPLETE_RISK_REQUEST_HIGH', 'INCOMPLETE_RISK_REQUEST_LOW') THEN 'RESPONSE'
    WHEN SUBROUTE IN ('UNCATEGORIZED_AFTERPAY_HIGH', 'UNCATEGORIZED_AFTERPAY_LOW') THEN 'AFTERPAY'
    WHEN SUBROUTE IN ('VERIFF_CASE_REVIEW_LOW', 'VERIFF_CASE_REVIEW_HIGH') THEN 'VERIFF'
    WHEN SUBROUTE IN ('UNCATEGORIZED_HIGH', 'UNCATEGORIZED_LOW') THEN 'UNCAT'
    WHEN SUBROUTE IN ('GOOD_MERCHANT_GONE_BAD_LOW', 'GOOD_MERCHANT_GONE_BAD_HIGH') THEN 'GMGB'
    WHEN SUBROUTE IN ('UNLINKED_REFUND_CASE_REVIEW_LOW', 'UNLINKED_REFUND_CASE_REVIEW_HIGH') THEN 'UNLINKED REFUNDS'
    WHEN SUBROUTE IN ('LINKED_TO_BAD_USER_LOW', 'LINKED_TO_BAD_USER_HIGH') THEN 'LBU'
    ELSE SUBROUTE
END AS Cases,
TO_CHAR(created_at, 'DY') AS DAY,
DATE(created_at) AS DATE,
(COUNT(user_token)) AS COUNT_EM

FROM app_risk.app_risk.fact_risk_cases
WHERE created_at >= dateadd(day, -30, current_date())
AND "group" IN ('tr')
AND COUNTRY_CODE IN ('US', 'CA')
AND SUBROUTE IS NOT NULL
AND CASE_TYPE = 'suspicion'
AND USER_TOKEN IS NOT NULL
GROUP BY 1, 2, 3
ORDER BY DATE ASC
)
GROUP BY 1, 2
ORDER BY 1, 3 DESC`
   export default query;